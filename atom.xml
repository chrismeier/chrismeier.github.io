<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Chris Meier's Blog]]></title>
  <link href="http://ChrisMeier.github.io/atom.xml" rel="self"/>
  <link href="http://ChrisMeier.github.io/"/>
  <updated>2013-10-28T20:54:17-07:00</updated>
  <id>http://ChrisMeier.github.io/</id>
  <author>
    <name><![CDATA[Chris Meier]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Alternates to Apple Mail]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/10/28/alternates-to-apple-mail/"/>
    <updated>2013-10-28T20:28:00-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/10/28/alternates-to-apple-mail</id>
    <content type="html"><![CDATA[<p>Since upgrading to Mavericks I have found the Apple Mail app to be incredibly buggy. Mail often takes 5-10 minutes longer than it takes for it to arrive on my phone or within the browser client. There are also other instances where the mail process will spike to 200% &ndash; 500% CPU usage according to the iStat Pro widget. This doesn’t effect the performance of the rest of the computer but it is a huge drain on my battery. Additionally, from time to time the fans will spin up to 6000 RPM’s and my normally quiet Macbook Pro is now competing with a professor for the loudest thing in the room.</p>

<!-- more -->


<h3>Alternate 1: Mail Pilot</h3>

<p>Until that is fixed (and I did look to see if there was something I could do) I have chosen to use another mail app. My first choice became the Kickstarter success <a href="http://www.mailpilot.co">Mail Pilot</a>. It is one of those email clients that focuses on turning your email into a to-do list and aims for inbox zero.
<img src="http://ChrisMeier.github.io/images/BlogImages/MailPilot.png" title="'Mail Pilot'" >
The mobile app looks great (at least from the app store pictures) but unfortunately the desktop version is currently in beta and is slow to roll out. So option 1 is on the back burner for now.</p>

<h3>Alternate 2 Part 1: Air Mail</h3>

<p>The next client I came across is called Air Mail. It is a fairly simple looking client with a lot of customization as far as how you want it to look.
<img class="right" src="http://ChrisMeier.github.io/images/BlogImages/AirMailFolders.png" title="'Air Mail Folders'" > It is has a clean feel to it but also has a weird color thing going on with the various folders in your mail box.  The speed compared to apple mail is night and day, everything from pulling in mail to opening up a random folder it is incredibly quick. The inbox also has gesture support, two-finger swipe-right to archive and swipe-left trash the item. Bottom line is that Air Mail has a familiar feel compared to Apple Mail but is much quicker and doesn’t kill my battery.</p>

<h3>Alternte 2 Part 2: Mailbox App</h3>

<p>Since Mail Pilot was my first choice I considered getting their mobile app but decided instead to wait for the desktop version before investing $14.99 in their ecosystem. A competitor to Mail Pilot, <a href="http://www.mailboxapp.com">Mailbox</a>, was also picking up a lot of attention and is very similar in functionality so I am currently giving that a shot as well. Mailbox also has a to-do list/inbox zero approach to email and as an added benefit you get an extra 1GB in Dropbox.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[To-Do Lists + Calendars]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/10/09/to-do-lists-plus-calendars/"/>
    <updated>2013-10-09T10:06:00-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/10/09/to-do-lists-plus-calendars</id>
    <content type="html"><![CDATA[<p>I am a huge fan of To-Do lists and have been an extreme user of them for the past 4 years. Over the years my methods have changed from a piece of printer paper and sharpie taped to my wall, to notecards, to post-it notes, to the iOS note apps, to reminders, to notebooks. The one thing I have always struggled with is the visualization of priority and time consumption for each task. I recently came across a fantastic article, <a href="http://blogs.hbr.org/2012/01/to-do-lists-dont-work/">To-Do Lists Don&rsquo;t Work</a>, in the Harvard Business Review and it has changed how I go about task organization.</p>

<!-- more -->


<h3>The Inherent Problems with To-Do Lists</h3>

<p>Daniel Markovitz more or less argues that the reason why to-do lists alone are not good enough is because of the heterogenous nature of a list of items as well as our ability to choose what we want to do.</p>

<p>His first point is that to-do lists are just a series of tasks that we need to complete. Because they do not have time consumption required associated with them usually, it makes it difficult to guage how much work you actually have on that list. Even if you were to write next to every item how long it would take it still would not do a very good job of telling you how much work you have and would detract from the point of having a simplified list of tasks. Additionally, we don&rsquo;t know what is most important on that list; there is not a due date, nor is there an understanding of any sort of sequential order that the tasks need to be completed.</p>

<p>I had tried to solve this at one point by putting together a list in the order I wanted to do things but inevitabely I ran into two issues. The first being that I would need to add a task to the middle of the list which would ruin the clean look (minor case of OCD?) if I did not rewrite it. The other being that if one item took longer than expected, and an item a couple behind it had a due date that snuck up on you, it would require that you jump the list to take care of it before the others. What I learned from this is that it only works well for single-day to-do lists, and over a few days this solution loses effectivity.</p>

<p>The next point Markovitz makes in his article is that we do not commit ourselves to completing tasks. By this he is saying that we pick whatever is easiest and most appealing on our to-do list. The poses the problem of us cheating our way through a positive feedback loop and trying to get the accomplished feeling when we check-off or cross out another item.</p>

<p>To show where this fails I give you an example of to-do list with 10 items, 2 being long projects, the other 8 being smaller tasks. Becuase these are all represented equally on  the list we go for the 8 small items first as they are easy. If we can knock out 8 items in the time it takes to accomplish 1 of the bigger items it visually looks like we have accomplished more. We then become comfortable with doing 80% of the things that could have been done and move the remaining 20% to the next week. The next week we add another 10 items to the list with the same split, the result being that 4 large tasks and another 8 easy ones.</p>

<p>At this point we may realize that we have a backlog of large tasks and one is due soon so we take care of one of them and the rest of the easy ones that week. Eventually this cycle yields a to-do list that consists of large tasks and the nature of the to-do list only furthers that. The problem here is that we are not committed to accomplishing any specific task.</p>

<h3>So What Do We do?</h3>

<p>The article suggests that the solution lies within using a calendar in tandem with a to-do list. To review, the problems with the to-do lists are:</p>

<ol>
<li>No sense of priority or due date associated with each task.</li>
<li>No sense of time allocation required for each task.</li>
<li>No commitment to completing a task</li>
</ol>


<p>Using the calendar suggests that you take your tasks and you place them on your calendar allocating time slots in advance for when you will work on the task. So how does it solve the problems with to-do lists?</p>

<ol>
<li>By allocating a slot on a timescale you immediately have prioritized that work relative to the other items on your list. When you put it on the list you are also taking into account the date it needs to be done by solving the issue of due dates not being taken into account.</li>
<li>In putting the items on your calendar you are allocating a specific amount of time to a task. This allows you to visualize how large your to-do list is beyond a length of unchecked boxes.</li>
<li>By putting it on the calendar you are getting around the &ldquo;I&rsquo;ll get to it when I finish xyx task,&rdquo; issue. One thing I&rsquo;ve also found is that by being able to visualize my workload I can see when I have time to work on larger projects without interuption by class or work and I try to be more productive during those times because of I can see the limited amount of those timeslots.</li>
</ol>


<h3>My Impressions so Far</h3>

<p>Having used to-do lists over the past four years and being frustrated by scrapping them only to move incomplete tasks to a new one and just watching it build up, moving to a calendar and to-do list combination has been an amazing tranasition. Currently I write out everything I need to do on a to-do list. I am in between using a physical copy and and the native Reminders app on the iPhone but thinking about sticking to the paper because I like being able to physically cross something off. After the to-do list is complete I then add them to my calendar using different sub-calendars/colors for differnt types of work (personal, class, work). I use a fourth type called &ldquo;unassigned&rdquo; for putting items on the calendar onto a relatively empty day to signify that I have not found a time to work on them but to help visualize my workload.</p>

<p>I am about a week into using this system and have found myself to be incredibly productive and much more focused when working on tasks because I know that there is a hard stop.</p>

<p>Do you have a system that you like or reccomendations on how to optimize this one?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Forums in Rails]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/10/08/rails-forum-with-forem-gem/"/>
    <updated>2013-10-08T14:19:00-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/10/08/rails-forum-with-forem-gem</id>
    <content type="html"><![CDATA[<h3> Let&#8217;s get a forum going </h3>


<p>So I recently wanted to tack on a forum to my application. The below post is my process in deciding on what forum software to choose and the considerations I made along the way, as well as what I ultimately ended up using.</p>

<!-- more -->


<p>I started by identifying two roads:<br/></p>

<ol>
<li>Build a forum system.</li>
<li>Use a pre-built forum software.</li>
</ol>


<p>Well I am learning Ruby on Rails right now so building a forum system that adds a little value to the overall value of the main application seems like a poor allocation of resources. So #2 seems like the right option, so what are my options?</p>

<h3>Existing Forum Software</h3>

<p>There are some fantastic forums out there that I would ideally like to have to have my forum look like so intially I started by googling what software was being used by those forums. What I found was that there was three very popular forum softwares:<br/></p>

<ul>
<li><a href="https://www.phpbb.com">PhpBB</a></li>
<li><a href="http://www.invisionpower.com/apps/board/">IPboard</a></li>
<li><a href="http://xenforo.com">XenoForo</a></li>
</ul>


<p>When I was deciding I chose IP board intiailly based on its popularity amongst forums I visited as well as the apparent ease of use. So next came the question of how do I install it?</p>

<h3>Is a PHP Forum software the right choice</h3>

<p>All three of these options are PHP based meaning that I would have to run it as a separate app on my server. This poses a couple of issues:</p>

<ol>
<li>How many resources am I allocating to another app?</li>
<li>How do I manage users between the two apps?</li>
<li>Can I run two apps on the main server?</li>
<li>How much time am I taking away from learning RoR by dealing with a PHP based application as well?</li>
</ol>


<p>Some of these I dug into a little bit and others I just answered based on past knowledge/gut feeling.</p>

<ol>
<li>I see this causing two issues the first being CPU and the second being hard drive space. So CPU probably isn&rsquo;t a huge issue initially but if the app needs to be scalable then I am taking away processes from my rails app and dedicating them to the PHP one. If there was a way to dynamically allocate those (which there may very well be, I just haven&rsquo;t looked, and who knows it might do it automatically) then this might not be that big of an issue. With the hard drive space, it really isn&rsquo;t so much a matter of space but more that of the database and how saving forum data and rails app data would be handled. Apparently there is a way to make it so that you can use the same database to interact between the two apps which would make this a viable option but rails makes managing a database incredibly easy.</li>
<li>I did a minimal amount of research into this as everything I saw at face-value seemed relatively complex for where I am at and would require me dedicating time to get up-to-speed in areas of rails that might not be important in pushing towards building my MVP aside from the forum.</li>
<li>This apparently is not to hard but you have to make it so that the two apps run behind a layer that manages port switching. While it is doable it is an extra step and one more thing to manage/configure. Not great.</li>
<li>Well I already know a little bit of PHP and I&rsquo;d imagine that most of the time would be spent making sure the styling is consistent across both apps. Again, one more step to take but the forum software seems like it would help with making the forum look pretty so maybe not all that bad and as a plus it might look better than what I&rsquo;m already doing.</li>
</ol>


<h3>Using Forem</h3>

<p>Ultimately I decided that using the popular solutions that were PHP based was not the best way to efficiently implement a forum solution without a huge hit to development time and resources. This is when I began investigating forums that run on Rails. From there I found a gem called <a href="https://github.com/radar/forem" title="Github Forem">forem</a> developed by <a href="https://twitter.com/ryanbigg">Ryan Bigg</a>. Once you have added the gem to your gemfile and run the bundle command there is a quick install command to get you set up. From there you just run migrations to add the various models for the forum. This also assumes that you have a User table (I believe), and works incredibly well if you are using the <a href="https://github.com/plataformatec/devise">devise</a> authentication gem. From there you&rsquo;ll need to set up some basic methods that point to a username and email, in the case of using devise, your current_user method.</p>

<h3>Issues to note</h3>

<p>I only ran into two hickups along the way one being because I was using Rails 4.</p>

<p><b>Paths break with Rails 4&hellip;sort of:</b><br/>
If you are using Rails 4 you will first want to make sure you are on the Rails 4 branch of forem:</p>

<figure class='code'><figcaption><span>APP_FOLDER/Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;forem&#39;</span><span class="p">,</span> <span class="ss">:github</span> <span class="o">=&gt;</span> <span class="s2">&quot;radar/forem&quot;</span><span class="p">,</span> <span class="ss">:branch</span> <span class="o">=&gt;</span> <span class="s2">&quot;rails4&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you run your application you might find that certain paths are not found when you go to you visit your forum at <a href="http://www.sitename.com/forum/">http://www.sitename.com/forum/</a> . Based on the GitHub issues pages I have gathered that is has to to with the scope of forem and as it runs as a seperate rails engine it is unable to see the paths within the main app. To solve this you need to put &ldquo;main_app.&rdquo; in front of the paths. I had to use this for all paths in navigation bar.<br/></p>

<figure class='code'><figcaption><span>Example</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% link_to </span><span class="s2">&quot;Sign In&quot;</span><span class="p">,</span> <span class="n">main_app</span><span class="o">.</span><span class="n">user_login_path</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><b>Themeing</b><br/>
The other issue I ran into was with applying a theme. There are several gems already out there. I chose to use the <a href="https://github.com/radar/forem-theme-base">base</a> theme but there is one for <a href="https://github.com/radar/forem-bootstrap">Twitter Bootstrap</a> as well as an alternate theme called <a href="https://github.com/radar/forem-theme-twist">Twist</a>.</p>

<p>You just need to add the theme gem to your Gemfile:</p>

<figure class='code'><figcaption><span>APP_FOLDER/Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;forem&#39;</span><span class="p">,</span> <span class="ss">:github</span> <span class="o">=&gt;</span> <span class="s2">&quot;radar/forem&quot;</span><span class="p">,</span> <span class="ss">:branch</span> <span class="o">=&gt;</span> <span class="s2">&quot;rails4&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;forem-theme-base&#39;</span><span class="p">,</span> <span class="ss">:github</span> <span class="o">=&gt;</span> <span class="s1">&#39;radar/forem-theme-base&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>You will additioanlly need to run the theme as a Rails engine. I wasn&rsquo;t to clear on what this meant but after digging into it it looks like all you need to do is set up an intializer by making a file called forem.rb under your lib folder:</p>

<figure class='code'><figcaption><span>APP_FOLDER/lib/forem.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;forem&#39;</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Forem</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Theme</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">Base</span>
</span><span class='line'>      <span class="k">class</span> <span class="nc">Engine</span> <span class="o">&lt;</span> <span class="ss">Rails</span><span class="p">:</span><span class="ss">:Engine</span>
</span><span class='line'>        <span class="no">Forem</span><span class="o">.</span><span class="n">theme</span> <span class="o">=</span> <span class="ss">:base</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Final Thoughts</h3>

<p>Setting up a forum only took a couple of hours, mostly doing research, and then playing around with forem once I had it installed. Right now it is in beta form (I believe) but the development roadmap looks pretty exciting. I haven&rsquo;t spent a whole lot of time styling it but being able to to customize the views fairly easily will make this a pretty flexibile forum that will fit seemlessly in with the rest of the app. My only concern at this point is making sure that the forum does not overpower the main app in terms of bogging down performance and filling up the database.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Non-Rails Posts]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/09/20/non-rails-posts/"/>
    <updated>2013-09-20T11:07:18-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/09/20/non-rails-posts</id>
    <content type="html"><![CDATA[<p>So I found myself wanting to post about things other than rails that sort of tie into software development but are not closely enough tied to rails that I would want to include them in the core of the site.</p>

<!--more-->


<p>I will be posting here about things ranging from interesting business trends to tools I use to random tie-bits I find on the internet that I want to talk more about.</p>

<p>Edit: After moving to Octopress I&rsquo;ve decided to use the &lsquo;Off-topic&rsquo; tag instead of a seperate feed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Static Pages with Rails]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/07/30/static-pages-with-rails/"/>
    <updated>2013-07-30T17:30:49-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/07/30/static-pages-with-rails</id>
    <content type="html"><![CDATA[<p>Recently I wanted to put together and &ldquo;About Me&rdquo; and a &ldquo;Resources&rdquo; page but I didn&rsquo;t know how do this within rails.</p>

<!-- more -->


<p>Turns out it was pretty simple but I should acknowledge that my solution isn&rsquo;t the only option and if you site is mostly static I&rsquo;ve read that Jekyll might be a good option.</p>

<p>To create static pages I first made a controller for those pages:</p>

<pre>rails g controller pages</pre>


<p>From there I went to the newly created &ldquo;pages&rdquo; folder within my views. I added a new file: <i>about.html.erb</i> and put the static HTML that I wanted to serve up in here.</p>

<p>The final touch was adding routes so I could link to the files. Within my routes.rb I added:</p>

<pre>get '/about' => 'pages#about'</pre>


<p>And boom, just like that I am able to link to these files in my header and easily serve up HTML pages without having to get extra gems or get to crazy with things.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Git With Amazon EC2]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/06/23/using-git-with-amazon-ec2/"/>
    <updated>2013-06-23T13:14:32-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/06/23/using-git-with-amazon-ec2</id>
    <content type="html"><![CDATA[<p>There are various ways to use the git version control system especially with EC2 and I&rsquo;m sure there is plenty of documentation on how to do it but I found that most of the information was scattered and not straightforward enough so I have decided to write a post explaining my solution.</p>

<!-- more -->


<p>Setting this up assumes that you have git installed on your local machine, a linux distro running on EC2 (Ubuntu 12 in my case), and a GitHub account. If you don&rsquo;t have git set up yet <a href="http://git-scm.com/book/en/Getting-Started-First-Time-Git-Setup">this is a great guide</a>.</p>

<p>My solution is a little more manual than I would like it to be but that is something I will change down the road once I learn more about git and version control I will provide a new post.</p>

<p>The current end result from these instructions is your local machine for coding and testing, a GitHub repository for storing the files, and having your EC2 instance pull the latest versions.</p>

<p>You&rsquo;ll first need to initialize your git repository locally. It is a simple command that you run from within your project&rsquo;s folder:</p>

<pre> $ git init</pre>


<p>This will tell git that you want to create a repository within your project&rsquo;s folder. A repository serves the same purpose as storing the files on GitHub only it is local copy (See Distributed Version Control Systems for more info).</p>

<p>You&rsquo;ll now want to set up your remote repository on GitHub and you can do that through this <a href="https://github.com/new">page</a>. After creating your remote repository you will want to add it to your local so it knows what to connect to.</p>

<pre> $ git remote add origin git@github.com:username/projectname.git </pre>


<p>This will have added the git repository in your GitHub account and given it a local reference name of origin.</p>

<p>At this point to interact with your remote repository further (push, pull etc) you will need to have the proper permission to do so and this is achieved by creating an ssh key:</p>

<pre> $ ssh-keygen -t rsa -C "youremail@emailprovider.com"</pre>


<p>Accept the default location of the key (likely in ~/.ssh) but just make note of it. If you want a password in addition to use your ssh key you can enter that here. Note: It will ask you for your password every time you send a request to your GitHub repo. You will then want to get the contents of the .pub file it created:</p>

<pre> $ cat ~/.ssh/id_rsa </pre>


<p>Take the output from that command can copy and paste it into the new <a href="https://github.com/settings/ssh">key prompt on git hub</a>. This lets GitHub know what key you will be using to connect with your repository.</p>

<p>Okay so now that we have created the repository both local and remote, created a link between the two calling the remote origin, and created a key that will allow for the two to interact.</p>

<p>So now we to add changed files to the staging area to let git know that you want to include them in your next commit. The way git works is by taking snapshots of a collection of files. To take a snapshot of your files you commit them to the repository. Before we commit we have to tell git which files we want to include in the snapshot and this is done through the git add command:<br></p>

<pre> $ git add . </pre>


<p>or</p>

<pre> $ git add filename.extension </pre>


<p>You can check to make sure that those files have been marked to be included in the next commit with the command:<br></p>

<pre> $ git status </pre>


<p>Once we are happy with the files that have been added we issue the commit command to take a snapshot:<br></p>

<pre> $ git commit -m "Your message/note about the commit goes here" </pre>


<p>The -m option allow you to add a note to the commit to help you keep track of what each commit did.</p>

<p>We are now ready to copy those changes to our remote repository:<br></p>

<pre> $ git push origin master </pre>


<p>The git push command tells git that you want to push your pre to another repository and this case the one that we called origin (our remote repo) and to the master branch. If you are just starting out the master branch is the main branch and also the default that is created.</p>

<p>At this point you can go to GitHub and confirm that your files are appearing there.</p>

<p>To get the code on the server we will undergo a similar process. You will need to make a folder to store your project in:<br></p>

<pre> $ mkdir ProjectFolderName </pre>


<p>Change directory:<br></p>

<pre> $ cd ProjectFolderName </pre>


<p>You will need to initialize a git repository (git init), make an ssh-key, add it on GitHub, and add your remote repo from GitHub; you can follow the same steps as before, the only difference being the machine you are doing it on.</p>

<p>The last step is to pull your code from the repository to your server:<br></p>

<pre> $ git pull origin master </pre>


<p>You should now have a copy of the code on your server. Remember, you will need to re-run db migrations if you haven&rsquo;t already.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How [Not] to Render HTML With Ruby on Rails]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/06/15/how-not-to-render-html-with-ruby-on-rails/"/>
    <updated>2013-06-15T01:37:02-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/06/15/how-not-to-render-html-with-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>So after putting up my second post I realized that rails had escaped all of my line breaks and when it came time to show the post it wasn&rsquo;t rendering them. I jumped on google and looked for an answer and the result was a <a href="http://stackoverflow.com/questions/3137393/rails-add-a-line-break-into-a-text-area"\>solution on Stack Overflow</a> and an understanding of why it had done that.<br>
So what was the solution?  <!-- more -->Well it turns out you just need to tell Rails to substitute the the escaped characters with html line breaks:</p>

<pre> <%= @post.body.gsub(/\n/,'&lt;br/&gt;') %> </pre>


<p>Easy enough right? Well that now allows for link breaks to occur which is great, but when I viewed my posts now, all I was seeing was my text split up by a bunch of <pre>&lt;br/&gt;
</pre>tags.</p>

<p>The next step was to tell rails, &ldquo;Hey it&rsquo;s okay to render the HTML tags in here&rdquo;. To accomplish this we simply add the .html_safe method to the end of the existing render command.</p>

<pre> <%= @post.body.gsub(/\n/,'&lt;br/&gt;').html_safe %> </pre>


<p>So all is great right? No. Allowing HTML to be rendered can pose some security risks or allow for stupid errors if you mess something up like I did below:<br>
<img class="left" src="http://ChrisMeier.github.io/images/BlogImages/multiplePostsError.png" title="image" alt="images"></p>

<br>In forgetting to close a link tag I ended up messing up my HTML and the result was submitting a new post every time I hit save. So imagine if your users had this power? Or if they wanted to perform some malicious attack such as XSS? That doesn&#8217;t bode so well for you so allowing user submitted text to be rendered is not the best idea.


<br/>


<br>


<p>I&rsquo;m sure someone else has a better solution but for the time being my choice is to understand that I have a security risk in my ability to post so as long as I properly close tags and keep the ability to post to myself I should be good to go.</p>

<p>If you have a better solution, I would love to know</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I Ended Up Here]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/06/12/how-i-ended-up-here/"/>
    <updated>2013-06-12T20:41:02-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/06/12/how-i-ended-up-here</id>
    <content type="html"><![CDATA[<p>So I thought my experience with coding would be a good topic to review to provide a clearer explanation of the path I am on. Coding has always ben something that has interested me, but I have always found an excuse not to pursue it more aggressively. When I was in 7th and 8th grade I took a computer class where we went over HTML and played around with various elements and ran them off our local computer. Well I wanted more of it so after a while I worked on my own site at home and eventually hosted it on Geocities. It was a crap site with the usual tiled image background, links to sites I liked and maybe a review or two of movies that I had just seen. I would say that this experience is what really convinced me that I could construct some sort of code in a meaningful way.</p>

<!--more-->


<p>Fast forward 5 years and I am in college taking Management Information System &mdash; MIS (my option) courses and am getting a better understanding of the structure of applications, networking and the functions of a server. My second year I took a SQL course and entered it excited to learn another language and the structure of databases was always something that interested me. I finished the course top in the class, with an fantastic understanding of the RDB&rsquo;s and SQL, and was offered a position as a TA which I&rsquo;ve now held for 4 semesters.</p>

<p>Knowing SQL was empowering but it became clear it was not a language that I could make something cool with. I had ideas for iOS apps and tried looking into Objective-C but was quickly discouraged by the recommendations that I should know other languages first. My momentum took a hit which was compounded by taking a course on PHP and MySQL which was ultimately fruitless. Finally a the end of the summer following my 3rd year things picked up.</p>

<p>I was interning at Soldsie (at the time Central.ly) and our application was built with Ruby on Rails. I was asked to go to a speed-interviewing event where I met with 40 or so &ldquo;students&rdquo; that had just gone through a 10-week intensive Ruby on Rails course. The common theme throughout the day was that people had entered the course with little knowledge of coding and came out feeling empowered to build, the same experience that I had felt after learning SQL. I was jealous and I wanted that feeling back and it pumped me up for the two semesters of Java that I had signed up for.</p>

<p>My first semester of Java programming consisted of learning the variable types, O-O principles, control structures, and interacting with external sources (inputs, databases, files). The second semester was web-development focused and utilized the J2EE framework&rsquo;s various components. I was taking class at the same time called System&rsquo;s Analysis that required that we build an app which I will discuss in a future post. I lead a team of 9 using our knowledge-in-progress of J2EE and set up a web server, built out the basic app, and then got it up and running within the first week. That semester was filled with headaches from staring at code until it worked and trying to develop as a team. Although it was harsh at times I treated it as an opportunity to solidify my knowledge from the first semester of Java and build upon what I was learning in class. Even though it wasn&rsquo;t always pleasant that fire to make something and that feeling of empowerment from knowing how to build something came back.</p>

<p>So that has been my programming experience prior to rails. While my background is fairly scattered I think I have gathered a solid understanding of how applications work, how databases work, and the web-development process.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Problem: Can Can (not) working in production]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/06/12/problem-can-can-not-working-in-production/"/>
    <updated>2013-06-12T09:08:18-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/06/12/problem-can-can-not-working-in-production</id>
    <content type="html"><![CDATA[<p>So I&rsquo;ve been a huge fan and consumer of Ryan Bates <a href="http://railscasts.com">RailsCasts</a>.  I find them very helpful with understanding the process of building a rails app from scratch or adding on features. My biggest issue is finding a place to start when coding. I&rsquo;m presented with my existing code and I just don&rsquo;t know how to take that first step in building out my ideas. I&rsquo;m getting better at it but a lot of credit is due to the RailsCasts and helping me understand the thought process one goes through when writing code.</p>

<!--more-->


<p>My current dilemma is that I am unable to run the gem CanCan in my production environment. It works fine in development and I able to :manage without issue. When I switch it over to production it seems that the roles never trigger. I am using a boolean in the User model to allow myself to define whether or not I should have permissions.</p>

<p>My first check was to make sure that my User record had the proper boolean in my production environment.</p>

<pre>RAILS_ENV=production rails console</pre>


<br>


<pre>irb> User.all</pre>


<p>At this point I realized that my User record in the production database did not have the boolean turned on. Should be a simple fix, just grab the id (## used in its place below) of my user that I wanted the turn on the roles for.</p>

<pre>irb> User.find(##).update_attribute(:attribute_name, 'True')</pre>


<p>&mdash;&mdash;Woops&mdash;&mdash;</p>

<p>Well initially I wanted to write this post as a way of sharing my problem and later making a post on how I fixed it. In going through code snippets to make sure I had the right syntax I found that the boolean that I had at one point set to true (or so I believed) in fact was false. So, after going through the above Can Can is now working in my production environment. In fact, it was always working, I was just being ignorant about the possibility of having made a mistake. Lesson learned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML Element Test]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/06/12/html-element-test/"/>
    <updated>2013-06-12T09:05:58-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/06/12/html-element-test</id>
    <content type="html"><![CDATA[<p>Well I happen to not be that well versed in how to prevent XSS and escaping characters so it was a surprise to me when Rails spat out my blog posts without any of the return lines (or breaks if you want to call them that). I have since found a solution online that I shall detail later but for the time being I wanted to test various HTML elements and see how they carry over when rendered. So here they are:</p>

<!--more-->


<p>Bold:<br>
<B>I heard it was best to inflate oneself visually when in the presence of a bear so as to deter an attack</B></p>

<p>Italicize:<br>
<I>I seem to be falling to the side. (Thought Bubble: Was the leaning tower of pisa built in a time that appreciated italics?)</I></p>

<p>Underline:<br>
<U>DO YOU SEE ME?</U> I have been.. oh wait, where did it go <em>snaps fingers</em> <U>Ah, this is much better (hopefully</U></p>

<p>Code:<br></p>

<pre> ALT + F4 wins you $30,000 ... suckers.... </pre>


<p>Alternate Code:</p>

<figure class='code'><figcaption><span>Alternate Code Test</span><a href='http://chrisonrails.com'>Chris On Rails</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Fixnum</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prime?</span>
</span><span class='line'>    <span class="p">(</span><span class="s1">&#39;1&#39;</span> <span class="o">*</span> <span class="nb">self</span><span class="p">)</span> <span class="o">!~</span> <span class="sr">/^1?$|^(11+?)\1+$/</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[State your purpose]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/06/12/state-your-purpose/"/>
    <updated>2013-06-12T09:04:34-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/06/12/state-your-purpose</id>
    <content type="html"><![CDATA[<p>Well, this is my first blog post (outside the traditional hello world), both on this platform and in my lifetime. Being new my first thought is to discuss my intentions for this blog as well as how it came to be so I will answer the latter and then the former so it all makes sense.</p>

<!--more-->


<p>My interest in blogging has been fairly minimal and I chalked it up as a medium for people who had something to say to say it and be heard by the few that found what they had to say of interest. In writing this I realize that not many people will every read this, if any at all, but for the sake of my intentions of creating/writing I will continue.</p>

<p>So why have I put this together? Well that is fairly simply: I needed a platform to document and discuss my movement through learning Ruby on Rails (Note to self: link later when you know how?). After having spent the summer interning at a start-up with development based around Ruby on Rails and having heard such great things about it from classmates I have decided to try my hand at it. In planning my learning of how to code with Ruby on Rails it was recommended that I put together a blog for two reasons. The first being that I have a way of documenting and sharing my progress, the second being that I can have a side project to maintain and update as time goes on.</p>

<p>So, you have a blog, what are you going to do with it?
Well as a mentioned previously my intentions are to practice Rails as this has been coded in Rails but additionally to document my progress. More importantly I see the blog as a platform to share my ideas about what I will be developing (read: trying to develop) and a way to discuss challenges that I have faced and offer insight into a rookies mind while trying to figure out this evidently &ldquo;beautiful&rdquo; language and framework that is Ruby on Rails.</p>

<p>With that said, welcome to Chris on Rails and hear is what you can expect to see soon: <br>
1. Updates to the blog as they come, at an extremely granular level<br>
2. My experience with coding and OO-principles <br>
3. My process for learning rails so far <br></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello, [Octopress]!]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/06/12/hello/"/>
    <updated>2013-06-12T09:04:09-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/06/12/hello</id>
    <content type="html"><![CDATA[<p>Hello world!</p>

<p>Edit: This wa originally my &ldquo;Hello, Rails!&rdquo; post but as this is no longer my rails blog and I am using Octopress I figured it made sense to chang it up.</p>
]]></content>
  </entry>
  
</feed>
