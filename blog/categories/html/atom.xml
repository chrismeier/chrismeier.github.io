<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: html | Chris Meier's Blog]]></title>
  <link href="http://ChrisMeier.github.io/blog/categories/html/atom.xml" rel="self"/>
  <link href="http://ChrisMeier.github.io/"/>
  <updated>2013-10-09T14:14:43-07:00</updated>
  <id>http://ChrisMeier.github.io/</id>
  <author>
    <name><![CDATA[Chris Meier]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How [Not] to Render HTML With Ruby on Rails]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/06/15/how-not-to-render-html-with-ruby-on-rails/"/>
    <updated>2013-06-15T01:37:02-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/06/15/how-not-to-render-html-with-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>So after putting up my second post I realized that rails had escaped all of my line breaks and when it came time to show the post it wasn&rsquo;t rendering them. I jumped on google and looked for an answer and the result was a <a href="http://stackoverflow.com/questions/3137393/rails-add-a-line-break-into-a-text-area"\>solution on Stack Overflow</a> and an understanding of why it had done that.<br>
So what was the solution?  <!-- more -->Well it turns out you just need to tell Rails to substitute the the escaped characters with html line breaks:</p>

<pre> <%= @post.body.gsub(/\n/,'&lt;br/&gt;') %> </pre>


<p>Easy enough right? Well that now allows for link breaks to occur which is great, but when I viewed my posts now, all I was seeing was my text split up by a bunch of <pre>&lt;br/&gt;
</pre>tags.</p>

<p>The next step was to tell rails, &ldquo;Hey it&rsquo;s okay to render the HTML tags in here&rdquo;. To accomplish this we simply add the .html_safe method to the end of the existing render command.</p>

<pre> <%= @post.body.gsub(/\n/,'&lt;br/&gt;').html_safe %> </pre>


<p>So all is great right? No. Allowing HTML to be rendered can pose some security risks or allow for stupid errors if you mess something up like I did below:<br>
<img class="left" src="/images/BlogImages/multiplePostsError.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ></p>

<br>In forgetting to close a link tag I ended up messing up my HTML and the result was submitting a new post every time I hit save. So imagine if your users had this power? Or if they wanted to perform some malicious attack such as XSS? That doesn't bode so well for you so allowing user submitted text to be rendered is not the best idea.


<br/>


<br>


<p>I&rsquo;m sure someone else has a better solution but for the time being my choice is to understand that I have a security risk in my ability to post so as long as I properly close tags and keep the ability to post to myself I should be good to go.</p>

<p>If you have a better solution, I would love to know</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML Element Test]]></title>
    <link href="http://ChrisMeier.github.io/blog/2013/06/12/html-element-test/"/>
    <updated>2013-06-12T09:05:58-07:00</updated>
    <id>http://ChrisMeier.github.io/blog/2013/06/12/html-element-test</id>
    <content type="html"><![CDATA[<p>Well I happen to not be that well versed in how to prevent XSS and escaping characters so it was a surprise to me when Rails spat out my blog posts without any of the return lines (or breaks if you want to call them that). I have since found a solution online that I shall detail later but for the time being I wanted to test various HTML elements and see how they carry over when rendered. So here they are:</p>

<!--more-->


<p>Bold:<br>
<B>I heard it was best to inflate oneself visually when in the presence of a bear so as to deter an attack</B></p>

<p>Italicize:<br>
<I>I seem to be falling to the side. (Thought Bubble: Was the leaning tower of pisa built in a time that appreciated italics?)</I></p>

<p>Underline:<br>
<U>DO YOU SEE ME?</U> I have been.. oh wait, where did it go <em>snaps fingers</em> <U>Ah, this is much better (hopefully</U></p>

<p>Code:<br></p>

<pre> ALT + F4 wins you $30,000 ... suckers.... </pre>


<p>Alternate Code:</p>

<p>``` ruby Alternate Code Test <a href="http://chrisonrails.com">http://chrisonrails.com</a> Chris On Rails
class Fixnum
  def prime?</p>

<pre><code>('1' * self) !~ /^1?$|^(11+?)\1+$/
</code></pre>

<p>  end
end
```</p>
]]></content>
  </entry>
  
</feed>
